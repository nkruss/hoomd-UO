import matplotlib.pyplot as plt
from Equations import *

equations = get_spring_equations(5000, 2500, [0, (2 * math.pi / 3.0), (4 * math.pi / 3.0)])
w = equations[0].w

static_averages = [0.05603145148655637, 0.25146940155694464, 0.4964503711328586, 1.395768547160307, 2.117818140673182, 10.2990918654503, 3.2078343238899265, 24.03459750944096, 13.733098311360909, 72.78699688585057, 20.867044293509004, 16.16921066852702, 2.7094481097398266, 74.99181834450967, 3.247763222681788, 19.361372588341563, 2.194636055503585, 1.0342896233227064, 0.6342633138245758, 0.4773264961455153]
dynamic_averages = [24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337, 24.03242744905337]

ratios = [0.9976685063710131, 0.9895362463034565, 0.979342479148838, 0.941921449669651, 0.9118766447890971, 0.571450204633574, 0.8665205863747949, -9.029717835169644e-05, 0.42855966837000264, -2.0286993288610815, 0.13171300162061028, 0.327191949177655, 0.8872586585153073, -2.1204429308477355, 0.8648591271286782, 0.19436467125986465, 0.908680217170903, 0.9569627485398506, 0.9736080212800327, 0.9801382320967199]
frequencies = [10, (w/4), 20, 30, (w/2), 50, 60, w, 80, 90, 100, 110, 120, 130, (w*2), 170, 200, 230, 260, (w*4)]
special = [w/4, w/2, w, w*2, w*4]
special_num = [40,40,40,40,40]

colors = []
for frequency in frequencies:
    if (w % frequency == 0) or (frequency % w == 0):
        colors.append('r')
    else:
        colors.append('b')

fig = plt.figure()
plt.xlabel('angular frequency')
plt.ylabel('average kinetic energy comparison')
ax1 = fig.add_subplot(111)

ax1.scatter(frequencies, static_averages, c="b", label="static")
ax1.scatter(frequencies, dynamic_averages, c="r", label="dynamic")
#ax1.scatter(special, special_num, c="g")
ax1.plot([w/4, w/4], [0, 80], 'k-', color = 'g')
ax1.plot([w/2, w/2], [0, 80], 'k-', color = 'g')
ax1.plot([w, w], [0, 80], 'k-', color = 'g')
ax1.plot([w*2, w*2], [0, 80], 'k-', color = 'g')
ax1.plot([w*4, w*4], [0, 80], 'k-', color = 'g')
plt.legend(loc='upper left')
plt.show()
